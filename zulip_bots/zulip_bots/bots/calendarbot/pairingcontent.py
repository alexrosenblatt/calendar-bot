PAIRING_CONTENT = f"<h3> Pair programming</h3><p>One of the most valuable ways to do all of the self-directives at RC is by pair programming. Most alums wish they'd spent more time pair programming during their batch. We learned this after the second batch, and have shared this fact with every batch since. Despite this, lots of people still tell us after their batch that they really wish they'd paired more.</p><h3>What is pair programming?</h3><p>Pairing means two people working on the same code using a single computer, either via screensharing on a video call or by sitting next to one another. Using only one computer is important, because pairing is about actively collaborating and not just two people working on the same project or sitting next to each other on their own computers.</p><h3>Pairing quickstart guide</h3><p><em>Finding someone to pair with</em></p><p>The best way to do this is to share what you’re working on regularly! That will help people find you. Check out the checkins stream on Zulip to learn about what people are working on, and don’t be afraid to reach out if something sounds interesting. Check out more specific interest streams on Zulip, too, especially the pairing stream, where you can ask for pairing buddies. In both the virtual and physical spaces we have designated pairing stations: you can use them to pair, or you can work at one by yourself to signal that you’re open to pairing.</p><p><em>Finding someone to pair with</em></p><p>It's good to make sure you have similar (or at least compatible) goals before you start pairing. If one person thinks the goal is to learn Python, and the other thinks the goal is to fix a bug as quickly as possible, you can run into friction. Make sure you're on the same page, or at least know where each other are coming from.</p><p>A common way to pair is having a 'driver' and a 'navigator': the driver is the one actually typing the code. The navigator sits next to the driver and reads the same screen, and is there to talk through ideas, direct the driver, and think about how the code currently being written fits into the larger project. If you're pairing this way, try to switch it up sometimes: switching regularly helps with knowledge transfer, ensures that both people get to drive and know what's going on, and helps keep everyone energized.</p><p><em>Getting through tough spots</em></p><p>Pairing can be hard at first, especially if you haven’t done it before. You may not think you have any code that is pair-worthy, or any valuable experience to contribute. It might feel uncomfortable programming out loud. You might not be sure if anyone shares your specific interests. But if we can give one piece of advice most strongly from our own experience and that of the thousands of Recursers who came before you, it’s that it’s worth pushing through these challenges.</p><p><em>Why we love pairing</em></p><p>There are several advantages to pairing. One is that it keeps everyone focused on the task at hand. When you're working alone, it can be easy to get distracted (e.g., by email or a shiny new JavaScript framework), but it's much, much harder to switch to Gmail when someone's sitting by your side and also reading your screen. Successful pairing should yield a productive feedback loop where each person helps keep the other focused.</p><p>Another advantage is that the navigator can catch a lot of small errors immediately (typos, missing semicolons, incorrect variable names, etc). It's faster and easier to fix bugs the moment they're introduced than at any subsequent time, so this ends up being a big win. Plus, as the saying goes, with many eyes, all bugs are shallow.</p><p>Pairing can help with everything from learning a language to picking up editor or command line tricks. And it’s motivating: it can get you excited about your project, stay with a problem when you might otherwise get distracted, or allow you to take on projects of a bigger scope than you could alone. Working on something deeply together can be a rare and special way to connect with another person.</p><p>Oh also, it's fun!</p><p>For all these reasons and more, pairing is one of the best ways to practice all three of the self-directives. We think everyone should try it — at least a few times and a few different ways.</p>"
